// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   ../@utkusarioglu/namespace
//   ../@utkusarioglu/controller
//   ../@utkusarioglu/resolver

declare module '@utkusarioglu/library' {
    export { Book } from "@utkusarioglu/library/Book/book";
    export { M_Library } from "@utkusarioglu/library/Mixins/m_library";
    export { M_Archive } from "@utkusarioglu/library/Mixins/m_archive";
    export { t_archiveTab, t_archive } from "@utkusarioglu/library/Common/t_library";
}

declare module '@utkusarioglu/library/Book/book' {
    import { M_Namespace, t_namespace } from "@utkusarioglu/namespace";
    import { t_libraryContent, i_libraryBook } from "@utkusarioglu/library/Common/t_library";
    export interface Book extends M_Namespace {
    }
    const Book_base: any;
    export class Book extends Book_base {
        readonly RESOLUTION_RULES: any;
        constructor(namespace: t_namespace);
        add_Chapter(item_name: string, item_data: any, per_item_call?: (item: any) => any): this;
        get_Chapter(item_name: string): any;
        has_Chapter(item_name: string): boolean;
        get_AllChapters(): i_libraryBook;
        get_AllChapterNames(): string[];
        add_BookContent(library_content: any, per_item_call?: (item: any) => any): this;
        add_Books(library_set: t_libraryContent, per_item_call?: (item: any) => any): this;
    }
    export {};
}

declare module '@utkusarioglu/library/Mixins/m_library' {
    import { M_Namespace } from "@utkusarioglu/namespace";
    import { Book } from "@utkusarioglu/library/Book/book";
    import { t_libraryBookName, i_libraryBook, t_libraryCollection, t_resourceCollectionRecipe } from "@utkusarioglu/library/Common/t_library";
    export interface M_Library extends M_Namespace {
    }
    const M_Library_base: any;
    export abstract class M_Library extends M_Library_base {
        protected initialize_Library(book_names: t_libraryBookName[], library_base?: any): this;
        protected set_LibraryBase(base: any): this;
        protected get_LibraryBase(): Object;
        protected get_AllBookNames(): t_libraryBookName[];
        protected add_BookName(book_name: t_libraryBookName): this;
        protected add_Book(book_name: t_libraryBookName, book_content?: i_libraryBook): this;
        protected get_Book(book_name: t_libraryBookName): Book;
        protected initialize_Books(book_names: t_libraryBookName[]): this;
        protected get_SomeBooks(collection_specifications: Array<t_libraryBookName> | t_resourceCollectionRecipe): t_libraryCollection;
        protected get_AllBooks(): t_libraryCollection;
    }
    export {};
}

declare module '@utkusarioglu/library/Mixins/m_archive' {
    import { M_Controller, M_ControllerEvents } from "@utkusarioglu/controller";
    import { M_Library } from "@utkusarioglu/library/Mixins/m_library";
    import { t_archive, e_archiveDepth, i_archiveFile, t_archiveTab, i_fileDescriptor, t_archiveTabWrapperFunc, t_libraryBookName } from "@utkusarioglu/library/Common/t_library";
    import { t_transmission } from "@utkusarioglu/controller";
    import { t_resolutionInstruction } from "@utkusarioglu/resolver";
    export interface M_Archive extends M_Controller, M_ControllerEvents, M_Library {
    }
    const M_Archive_base: any;
    export abstract class M_Archive extends M_Archive_base {
        protected add_Archive_FromResolutionInstruction(resolution_instruction: t_resolutionInstruction): this;
        protected extract_Archive_FromTransmission(transmission: t_transmission): t_archive;
        protected add_Archive(archive: t_archive): this;
        protected add_File(file: i_archiveFile): this;
        protected add_Tab(description: i_fileDescriptor, tab: t_archiveTab): this;
        protected disable_Archive_AtDepth(depth: e_archiveDepth): this;
        protected disable_Books(): this;
        protected disable_Chapters(): this;
        protected disable_Sections(): this;
        protected disable_Pages(): this;
        protected disable_Lines(): this;
        protected enable_Archive_AtDepth(): this;
        protected get_TabWrapper(book_name: t_libraryBookName, tab_input: t_archiveTab): any;
        protected set_TabWrappers(book_names: t_libraryBookName[], tab_wrapping_function: t_archiveTabWrapperFunc): this;
    }
    export {};
}

declare module '@utkusarioglu/library/Common/t_library' {
    export type t_libraryContent = any;
    export type t_archive = Array<t_archiveIsle | i_archiveFile>;
    export type t_archiveIsle = Array<t_archiveRack | i_archiveFile>;
    export type t_archiveRack = Array<t_archiveShelf | i_archiveFile>;
    export type t_archiveShelf = Array<t_archiveBox | i_archiveFile>;
    export type t_archiveBox = Array<t_archiveFolder | i_archiveFile>;
    export type t_archiveFolder = Array<i_archiveFile>;
    export interface i_archiveFile {
        DESCRIPTION: i_fileDescriptor;
        [shelf_name: string]: t_archiveTab;
    }
    export type t_archiveTab = {
        [archive_tab_name: string]: any;
    };
    export interface i_libraryBook {
        [chapter_name: string]: any;
    }
    export type t_libraryChapter = t_libraryDeepLevel;
    export type t_librarySection = t_libraryDeepLevel;
    export type t_libraryPage = t_libraryDeepLevel;
    export type t_libraryLine = t_libraryDeepLevel;
    export type t_libraryDeepLevel = {
        [chapter_name: string]: any;
    } | Array<any> | string | number;
    export type t_libraryBookName = string;
    export type t_archiveShelfName = string;
    export interface i_fileDescriptor {
        BOOK: string;
    }
    export type t_libraryCollection = t_archiveTab;
    export type t_resourceCollectionRecipe = {
        [recipe_name: string]: string;
    };
    export enum e_archiveDepth {
        Archive = 0,
        Isle = 1,
        Rack = 2,
        Shelf = 3,
        Box = 4,
        Folder = 5,
        File = 6,
        Tab = 7,
        Package = 11
    }
    export enum e_libraryDepth {
        Library = 8,
        Book = 10,
        Chapter = 11,
        Section = 12,
        Page = 13,
        Line = 14
    }
    export enum e_resourceDepth {
        Collection = 9,
        Source = 10,
        Reference = 11
    }
    export type t_archiveTabWrapperFunc = (unwrapped: t_archiveTab) => t_archiveTab;
}

